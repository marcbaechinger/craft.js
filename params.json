{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# craft.js - javascript build tool\r\n\r\nSee <a href=\"http://ec2-23-20-159-125.compute-1.amazonaws.com/\">a live demo</a>.\r\n\r\ncraft.js helps to manage, assess, build and distribute from a common JavaScript source code base.\r\n\r\n## Installation \r\n\r\n```\r\n # get craft.js from github\r\ngit clone https://github.com/marcbaechinger/craft.js.git\r\n\r\n # install dependencies\r\ncd craft.js/ && npm install\r\n\r\n # start application\r\nnode server.js\r\n\r\n```\r\n\r\n## Configuration\r\n\r\nChange the `app-config.json` to adjust the `port` on which the appication should listen.\r\n\r\n```\r\n{\r\n    \"server\": {\r\n        \"port\": 3000\r\n    },\r\n    \"path\": {\r\n        \"base\": \"\",\r\n        \"src\": \"resources/repository\",\r\n        \"dist\": \"resources/dist\",\r\n        \"jobs\": \"resources/jobs\",\r\n        \"views\": \"views\",\r\n        \"docroot\": \"public\"\r\n    },\r\n    \"context\": {\r\n        \"src\": \"repo\",\r\n        \"dist\": \"dist\",\r\n        \"jobs\": \"jobs\",\r\n        \"default\": \"repo\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n## declaring dependencies in a script\r\n\r\nDeclare dependencies of a script with a processing instruction at the top of a JavaScript file:\r\n\r\n```\r\n//= require \"../../model/collection, ../../model/model\"\r\n//= require \"/common/array\"\r\n//= require \"ui-helper\"\r\n```\r\n\r\nMultiple dependencies can be declared in a single processing instruction or with multiple instructions. craft.js takes care to concatenate the script in the declared order and avoids including the same file twice. The .js post fix must be omitted when declaring dependencies with a processing instruction. \r\n\r\n\r\n## Usage\r\n\r\n### Browse repository\r\n\r\n- Navigate your Browser to [http://localhost:3000/repo/](http://localhost:3000/repo/) to browse the JavaScript in the `resources` directory (see installation instructions).\r\n- Browse to a JavaScript of your choice.\r\n- Show JavaScript and play with the `expand`, `mangle`, `squeeze`, `minimize`, `beautify` and `lint` options. The transformed JavaScript file is displayed accordingly.\r\n\r\n### Create a distribution\r\n\r\n- Browse to a file\r\n- Add teh file to the project by clicking 'add to project' on the top right of the page\r\n- Repeat with as many files as you require for build\r\n- Click the project name to change the name of the project (part of the dist file name)\r\n- Click the project bar on the top to show current project configuration\r\n- Click the 'build' button to create a build \r\n- The browser is redirected to the new file stored on the server side\r\n\r\n### Delivering JavaScripts on the fly\r\n\r\nExpanding repositories and transforming the resulting source code can be done on the fly and delivered with content type text/javascript. Hence it's easy to create a single 'bootstrap.js' declare the required dependencies with the 'require' processing instructions and load the file on the fly while development or for testing.\r\n \r\n```\r\ncurl http://marc.no.de/repo/src/applications/craftjs/bootstrap.js?plain=true&mangle=true&squeeze=true&minimize=true\r\n```\r\n\r\n*Query parameters*\r\n\r\n- plain: deliver raw script with content type text/javascript\r\n- mangle: rename local variables to miminize script\r\n- squeeze: minimize even more (see JSHint docu)\r\n- minimize: transforme to minimized script\r\n- beautify: transform to pretty-printed script   \r\n\r\nThe web applicaton of craft.js uses this technique to serve the JavaScript for its web user interface.\r\n","google":"","name":"Craft.js","tagline":"JavaScript crafting tool"}